spring.application.name=Product-service
server.port=8083

#Connect to datasource
spring.datasource.url=jdbc:postgresql://localhost:5432/tarifficator
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.flyway.enabled=true
spring.flyway.schemas=product_service

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.properties.hibernate.default_schema=product_service
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=never

#kafka consumer
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.type.mapping=tariff:com.test2.product.payload.TariffDTO
#kafka producer
spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=product:com.test2.product.payload.ProductDTO

#resource server
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://${KEYCLOAK_SERVER:localhost}:8085/realms/${KEYCLOAK_REALM_NAME:tarifficator}

product.scope=SCOPE_product_service